# –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–ê–Ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
# –ó–∞–º–µ–Ω–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ config_enhanced_server.py

# =============================================================================
# –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –°–ï–ì–ú–ï–ù–¢–ê–¶–ò–ò
# =============================================================================

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò –£–ú–ï–ù–¨–®–ï–ù–ù–´–ï –ø–æ—Ä–æ–≥–∏ –º–æ–ª—á–∞–Ω–∏—è (–≤ —á–∞–Ω–∫–∞—Ö –ø–æ 0.25—Å)
SILENCE_THRESHOLD_SHORT = 2    # 0.5 —Å–µ–∫—É–Ω–¥—ã (–±—ã–ª–æ 1.5—Å)
SILENCE_THRESHOLD_MEDIUM = 3   # 0.75 —Å–µ–∫—É–Ω–¥—ã (–±—ã–ª–æ 2.0—Å)  
SILENCE_THRESHOLD_LONG = 4     # 1.0 —Å–µ–∫—É–Ω–¥–∞ (–±—ã–ª–æ 2.5—Å)

# –£–°–ö–û–†–ï–ù–ù–´–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ —Ä–µ—á–∏
SPEECH_CONFIRMATION_CHUNKS = 1  # –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –Ω–∞—á–∞–ª–æ (–±—ã–ª–æ 2-3)
SILENCE_CONFIRMATION_CHUNKS = 2 # –ë—ã—Å—Ç—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ (–±—ã–ª–æ 6)

# –ë–û–õ–ï–ï –ß–£–í–°–¢–í–ò–¢–ï–õ–¨–ù–´–ï VAD –ø–æ—Ä–æ–≥–∏  
VAD_THRESHOLD = 0.25           # –ü–æ–Ω–∏–∂–µ–Ω–æ —Å 0.4
SPEECH_THRESHOLD = 0.15        # –ü–æ–Ω–∏–∂–µ–Ω–æ —Å 0.25
SILENCE_THRESHOLD = 0.1        # –ü–æ–Ω–∏–∂–µ–Ω–æ —Å 0.15

# –£–°–ö–û–†–ï–ù–ù–´–ï –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
MIN_SPEECH_DURATION = 0.3      # –ü–æ–Ω–∏–∂–µ–Ω–æ —Å 0.5—Å
MAX_SPEECH_DURATION = 15.0     # –ü–æ–Ω–∏–∂–µ–Ω–æ —Å 25.0—Å

# =============================================================================
# –ù–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–û–ì–û –†–ï–ñ–ò–ú–ê
# =============================================================================

ULTRA_FAST_CONFIG = {
    # –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
    "mode": "ULTRA_FAST",
    "target_response_time_ms": 50,  # –¶–µ–ª–µ–≤–æ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞
    
    # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è
    "aggressive_segmentation": True,
    "early_termination": True,       # –î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
    "adaptive_thresholds": True,     # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä–æ–≥–∏
    
    # Predictive processing (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–µ—á–∏)
    "predictive_enabled": True,
    "predictive_buffer_size": 1.0,   # 1 —Å–µ–∫—É–Ω–¥–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    "predictive_confidence": 0.7,    # –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    
    # Streaming recognition
    "streaming_enabled": True,
    "stream_chunk_size": 0.5,        # –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥
    "stream_overlap": 0.25,          # –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
    
    # Instant command optimization
    "instant_patterns_priority": True,
    "bypass_full_segmentation": True, # –û–±—Ö–æ–¥ –ø–æ–ª–Ω–æ–π —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    "pattern_matching_threshold": 0.8,
    
    # Energy-based early detection
    "energy_spike_detection": True,   # –î–µ—Ç–µ–∫—Ü–∏—è –ø–∏–∫–æ–≤ —ç–Ω–µ—Ä–≥–∏–∏
    "energy_based_termination": True, # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ —ç–Ω–µ—Ä–≥–∏–∏
    "background_adaptation": True,    # –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫ —Ñ–æ–Ω—É
    
    # Advanced VAD settings
    "multi_threshold_vad": True,      # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ VAD
    "context_aware_vad": True,        # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–∑–∞–≤–∏—Å–∏–º—ã–π VAD
    "vad_smoothing": False,           # –û—Ç–∫–ª—é—á–∞–µ–º —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
}

# =============================================================================
# –ü–ê–¢–¢–ï–†–ù–´ –î–õ–Ø –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–û–ì–û –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–Ø
# =============================================================================

ULTRA_FAST_PATTERNS = {
    # –ß–∞—Å—Ç–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    "early_patterns": {
        "probing_depth": [
            r"probing.*depth.*tooth.*(\d+).*buccal.*(\d+).*(\d+).*(\d+)",
            r"probing.*depth.*tooth.*(\d+).*lingual.*(\d+).*(\d+).*(\d+)",
        ],
        "bleeding": [
            r"bleeding.*tooth.*(\d+).*buccal.*distal",
            r"bleeding.*tooth.*(\d+).*lingual.*distal",
        ],
        "mobility": [
            r"tooth.*(\d+).*mobility.*grade.*(\d+)",
            r"mobility.*grade.*(\d+).*tooth.*(\d+)",
        ]
    },
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –¥–æ—Å—Ä–æ—á–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    "trigger_words": [
        "probing", "bleeding", "tooth", "mobility", "grade", 
        "furcation", "class", "missing", "suppuration"
    ],
    
    # –ß–∏—Å–ª–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    "number_sequences": {
        "three_numbers": r"(\d+)\s+(\d+)\s+(\d+)",  # 3 2 4
        "tooth_grade": r"tooth\s+(\d+).*grade\s+(\d+)",
        "class_tooth": r"class\s+(\d+).*tooth\s+(\d+)"
    }
}

# =============================================================================
# –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–´–• –ù–ê–°–¢–†–û–ï–ö
# =============================================================================

def apply_ultra_fast_settings():
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    import logging
    logger = logging.getLogger(__name__)
    
    logger.info("üöÄ APPLYING ULTRA-FAST SETTINGS")
    logger.info("‚ö° Target response time: 50ms")
    logger.info("üéØ Silence thresholds: 0.5-1.0s (was 1.5-2.5s)")
    logger.info("üî• Aggressive segmentation: ENABLED")
    logger.info("üîÆ Predictive processing: ENABLED")
    
    return ULTRA_FAST_CONFIG

def get_optimized_vad_config():
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VAD –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏"""
    return {
        "threshold": 0.25,
        "speech_threshold": 0.15,
        "silence_threshold": 0.1,
        "smoothing": False,           # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        "adaptive": True,             # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä–æ–≥–∏
        "energy_boost": True,         # –£—Å–∏–ª–µ–Ω–∏–µ –ø–æ —ç–Ω–µ—Ä–≥–∏–∏
        "context_length": 3,          # –ö–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        "fast_response": True         # –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫
    }

def get_segmentation_speed_config():
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏"""
    return {
        "speech_confirmation_chunks": 1,    # –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –Ω–∞—á–∞–ª–æ
        "silence_confirmation_chunks": 2,   # –ë—ã—Å—Ç—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        "min_command_duration": 0.3,        # –ö–æ—Ä–æ—Ç–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        "max_command_duration": 15.0,       # –õ–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏
        "early_termination": True,          # –î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        "aggressive_mode": True,            # –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        "predictive_analysis": True,        # –ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        "streaming_recognition": True,      # –ü–æ—Ç–æ–∫–æ–≤–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
    }

# =============================================================================
# –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° EXISTING –°–ò–°–¢–ï–ú–û–ô
# =============================================================================

def patch_existing_config():
    """–ü–∞—Ç—á —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —É–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    
    # –ü–∞—Ç—á–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥
    config_patches = {
        # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä–æ–≥–∏
        "VAD_THRESHOLD": 0.25,
        "CLIENT_CHUNK_DURATION": 0.25,
        "SILENCE_THRESHOLD_SHORT": 2,
        "SILENCE_THRESHOLD_MEDIUM": 3, 
        "SILENCE_THRESHOLD_LONG": 4,
        "MIN_SPEECH_DURATION": 0.3,
        "MAX_SPEECH_DURATION": 15.0,
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞
        "processing_timeout": 10.0,
        "max_processing_errors": 50,
        
        # Instant commands
        "instant_commands_enabled": True,
        "instant_bypass_segmentation": True,
        "predictive_processing": True,
    }
    
    return config_patches

# =============================================================================
# MONITORING –î–õ–Ø –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–û–ì–û –†–ï–ñ–ò–ú–ê  
# =============================================================================

class UltraFastMonitor:
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    
    def __init__(self):
        self.response_times = []
        self.target_time = 50  # ms
        self.warning_time = 100  # ms
        self.critical_time = 500  # ms
        
    def record_response_time(self, time_ms):
        """–ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞"""
        self.response_times.append(time_ms)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        if len(self.response_times) > 100:
            self.response_times = self.response_times[-100:]
            
        # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        if time_ms > self.critical_time:
            logging.warning(f"üêå CRITICAL: Response time {time_ms:.0f}ms (target: {self.target_time}ms)")
        elif time_ms > self.warning_time:
            logging.warning(f"‚ö†Ô∏è SLOW: Response time {time_ms:.0f}ms (target: {self.target_time}ms)")
        elif time_ms <= self.target_time:
            logging.info(f"‚ö° ULTRA-FAST: Response time {time_ms:.0f}ms ‚úÖ")
    
    def get_performance_stats(self):
        """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        if not self.response_times:
            return {}
            
        import statistics
        
        return {
            "average_response_ms": statistics.mean(self.response_times),
            "median_response_ms": statistics.median(self.response_times),
            "min_response_ms": min(self.response_times),
            "max_response_ms": max(self.response_times),
            "target_achieved_percent": len([t for t in self.response_times if t <= self.target_time]) / len(self.response_times) * 100,
            "total_responses": len(self.response_times)
        }
